---
title: "z-score"
subtitle: "deeper dive into results"
author: "cslovas"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

```{r}
#| label: read in clean (ish) GARFO data
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(gmRi)
library(here)
library(grid)
library(ggiraph)

garfo_clean    <- read.csv(here("Data", "all_GARFO_data.csv"))
garfo_landings <- read.csv(here("Data", "landings.csv"))
license_list <- read.csv(file = here("commercial_permits.csv"))

garfo_clean %>%
  pivot_longer(cols = BLACK_SEA_BASS_1:TILEFISH_D, names_to = "PERMIT_TYPE", values_to = "COUNT") %>%
  select(PPORT, PPST, AP_NUM, AP_YEAR, VP_NUM, PERMIT_TYPE, COUNT) %>%
  filter(PPST %in% c("ME", "NH", "MA", "RI", "CT", "NY", "NJ", "DE", "MD", "VA", "NC")) %>%
  filter(!is.na(COUNT)) %>%
  filter(!COUNT == 0) %>%
  filter(!AP_YEAR == 2009 | !PERMIT_TYPE == "TILEFISH_D") %>% # I suppose there's a reason why I did this...
  left_join((license_list %>% rename("PERMIT_TYPE" = "license"))) %>% 
  filter(type == "commercial") -> garfo_holdings
```

```{r}
#| label: z score
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 15
#| fig-height: 15

# totals of license categories issued per year per state
garfo_holdings %>%
  group_by(PPST, AP_YEAR, category) %>%
  summarise(count = sum(COUNT)) -> total 

# by state
total %>% 
  group_by(PPST, category) %>% 
  mutate(z_score = scale(count, center = T, scale = T)) -> z_score 

# manual calculation for comparison (x - xmean / sd)

calc_z <- function(x, x_mean, sd){
  return((x-x_mean)/sd)
}

# by state
total %>%
  group_by(PPST, category) %>%
  mutate(z_score_manual = calc_z(count,
                mean(count),
                sd(count))) %>% 
  left_join(z_score) -> z_score

```

### Z score by state

```{r}
#| label: z score by state 
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 7
#| fig-height: 5

z_score_by_state <- z_score %>% 
  mutate(factor = factor(PPST, levels = c("ME", "NH", "MA", "CT", "RI", "NY", "NJ", "DE", "MD", "VA", "NC"))) %>%
  arrange(factor) %>% 
  group_by(factor) %>% 
  nest() %>% 
  mutate(plot = map2(data, factor, function(x,y){
    plot <- ggplot(data = x, aes(x = AP_YEAR, y = z_score, color = category, fill = category, tooltip =         category, data_id = category)) +
      geom_line_interactive(size = 1) +
      scale_color_gmri() +
      ggtitle(factor) + ylab("z-score") + xlab("Year") +
      theme_gmri(strip.background = element_rect(fill = "transparent"),
                strip.text = element_text(color = "black"),
                legend.position = "none",
                panel.border = element_rect(color = "black", linetype = 1),
                panel.grid.major = element_line(color = "#e9e9e9", linetype = 1),
                panel.grid.minor = element_line(color = "#e9e9e9", linetype = 1))
    
    interactive_plot <- girafe(
      ggobj = plot,
      width_svg = 7,
      height_svg = 5,
      options = list(
      opts_hover(css = "fill:category"),
      opts_hover_inv(css = "opacity:0.1;")))
    
    return(interactive_plot)
    }))
 
# please forgive the following; neither loop nor a function could get these damn things to print
# z_score_by_state$plot[[1]]
# z_score_by_state$plot[[2]]
# z_score_by_state$plot[[3]]
# z_score_by_state$plot[[4]]
# z_score_by_state$plot[[5]]
# z_score_by_state$plot[[6]]
# z_score_by_state$plot[[7]]
# z_score_by_state$plot[[8]]
# z_score_by_state$plot[[9]]
# z_score_by_state$plot[[10]]
# z_score_by_state$plot[[11]]

```

### By license category

```{r}
#| label: z score by category
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 13
#| fig-height: 9

# totals of license categories issued per year per state
garfo_holdings %>%
  group_by(PPST, AP_YEAR, category) %>%
  summarise(count = sum(COUNT)) -> total 

# by state
total %>% 
  group_by(PPST, category) %>% 
  mutate(z_score = scale(count, center = T, scale = T)) -> z_score 

# manual calculation for comparison (x - xmean / sd)

calc_z <- function(x, x_mean, sd){
  return((x-x_mean)/sd)
}

# by state
total %>%
  group_by(PPST, category) %>%
  mutate(z_score_manual = calc_z(count,
                mean(count),
                sd(count))) %>% 
  left_join(z_score) -> z_score

z_score_by_cat <- z_score %>% 
  group_by(category) %>% 
  nest() %>% 
  mutate(plot = map2(data, category, function(x,y){
    plot <- ggplot(data = x, aes(x = AP_YEAR, y = z_score, color = PPST, tooltip = PPST, data_id = PPST)) +
      geom_line_interactive(size = 1) +
      scale_color_gmri() +
      ggtitle(category) + ylab("z-score") + xlab("Year") +
      theme_gmri(strip.background = element_rect(fill = "transparent"),
                strip.text = element_text(color = "black"),
                legend.position = "none",
                panel.border = element_rect(color = "black", linetype = 1),
                panel.grid.major = element_line(color = "#e9e9e9", linetype = 1),
                panel.grid.minor = element_line(color = "#e9e9e9", linetype = 1))
    
    interactive_plot <- girafe(
      ggobj = plot,
      width_svg = 7,
      height_svg = 5,
      options = list(
      opts_hover(css = "fill:PPST"),
      opts_hover_inv(css = "opacity:0.1;")))
    
    return(interactive_plot)
    }))
 
# print
# z_score_by_cat$plot[[1]]
# z_score_by_cat$plot[[2]]
# z_score_by_cat$plot[[3]]
# z_score_by_cat$plot[[4]]
# z_score_by_cat$plot[[5]]
# z_score_by_cat$plot[[6]]
# z_score_by_cat$plot[[7]]
# z_score_by_cat$plot[[8]]
# z_score_by_cat$plot[[9]]
# z_score_by_cat$plot[[10]]
# z_score_by_cat$plot[[11]]
# z_score_by_cat$plot[[12]]
# z_score_by_cat$plot[[13]]
# z_score_by_cat$plot[[14]]
# z_score_by_cat$plot[[15]]
# z_score_by_cat$plot[[16]]
# z_score_by_cat$plot[[17]]
# z_score_by_cat$plot[[18]]


```
```{r}
#| label: plots for presentation
#| echo: false
#| message: false

bsb <- z_score %>% 
  filter(category == "Black sea bass" & PPST %in% c("NY", "RI", "NH", "ME"))

ggplot(data = bsb) +
  geom_hline(yintercept = 0) +
  geom_line(aes(x = AP_YEAR, y = z_score_manual, color = PPST), linewidth = 1) + 
  scale_color_gmri() + 
  guides(color = guide_legend(title = "State")) + 
  ylim(c(-2,2)) +
  ggtitle("z-scores") + 
  xlab("Year") + ylab("z score") +
  theme_gmri() +
  # max licence counts
  geom_label(data = bsb %>% group_by(PPST) %>% filter(z_score_manual %in% max(z_score_manual) & PPST %in% c("NH", "ME")),
            aes(x = AP_YEAR, y = z_score_manual, color = PPST, label = count)) +
  # max license count for overlapping maximum values (in NY & RI)
  ggrepel::geom_label_repel(data = bsb %>% group_by(PPST) %>% filter(z_score_manual %in% max(z_score_manual) & PPST %in% c("NY","RI")),
            aes(x = AP_YEAR, y = z_score_manual, color = PPST, label = count)) 

ggsave(here("Outputs", "zscore_opt2.png"), opt_2, width = 7, height = 5, units = "in", bg = "white")

```

