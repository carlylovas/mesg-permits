---
title: "License Movement"
author: "cslovas"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

```{r}
#| label: read in geocoded garfo data
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(gmRi)
library(here)
library(matrixStats)

garfo_geo    <- read.csv(file = here("Outputs", "GARFO_geocoded.csv"))
ny_nj        <- read.csv(file = here("Outputs", "geo_ny_nj.csv"))
species_list <- c("Atlantic menhaden", "Black sea bass", "Bluefish", "Clearnose skate", "Horseshoe crab", "Longfin squid", "Rosette skate", "Scup", "Striped bass", "Summer flounder", "Tilefish", "Weakfish")

```

## Tracking latitudinal movement of GARFO licenses

```{r}
#| label: grouped by target species 
#| echo: false
#| message: false
#| warning: false

garfo_geo <- garfo_geo %>% full_join(ny_nj)

species_list <- as_tibble(species_list) %>% rename("species" = "value") 

license_list <- garfo_geo %>%
  ungroup() %>%
  pivot_longer(cols = BLACK_SEA_BASS_1:TILEFISH_D, names_to = "license", values_to = "count") %>%
  select(license) %>% 
  distinct() %>%
  mutate(category = NA)

license_list$category[str_starts(license_list$license, "BLACK_SEA_BASS")] = "Black sea bass"
license_list$category[str_starts(license_list$license, "BLUEFISH")] = "Bluefish"
license_list$category[str_starts(license_list$license, "DOGFISH")] = "Dogfish"
license_list$category[str_starts(license_list$license, "GEN_CAT")] = "Scallop"
license_list$category[str_starts(license_list$license, "HERRING")] = "Herring"
license_list$category[str_starts(license_list$license, "HMS_")] = "Squid"
license_list$category[str_starts(license_list$license, "LOBSTER")] = "Lobster"
license_list$category[str_starts(license_list$license, "MONKFISH")] = "Monkfish"
license_list$category[str_starts(license_list$license, "MULTISPECIES_")] = "Multispecies"
license_list$category[str_starts(license_list$license, "QUAHOG")] = "Quahog"
license_list$category[str_starts(license_list$license, "RED")] = "Red crab"
license_list$category[str_starts(license_list$license, "SCUP")] = "Scup"
license_list$category[str_starts(license_list$license, "SEA_SCALLOP")] = "Sea scallop"
license_list$category[str_starts(license_list$license, "SKATE")] = "Skate"
license_list$category[str_starts(license_list$license, "SQUID_")] = "Squid/Mackerel/Butterfish"
license_list$category[str_starts(license_list$license, "SUMMER")] = "Summer flounder"
license_list$category[str_starts(license_list$license, "SURF")] = "Surf clam"
license_list$category[str_starts(license_list$license, "TILE")] = "Tilefish"

# write_csv(license_list, here("Data", "garfo_license_list.csv"))
```

```{r}
#| label: restructuring dataframe
#| echo: false
#| message: false
#| warning: false

garfo_geo %>%
  ungroup() %>%
  pivot_longer(cols = BLACK_SEA_BASS_1:TILEFISH_D, names_to = "license", values_to = "count") %>%
  filter(!count == 0) %>%
  left_join(license_list) %>%
  filter(lat >= 30) -> centers 
 
```

```{r}
#| label: trawl data
#| echo: false
#| message: false
#| warning: false

# Load NEFSC Bottom Trawl Survey data ####
clean_survey <- gmri_survdat_prep(
  survdat_source ="most recent",
  box_location ="cloudstorage"
)

clean_survey  <- clean_survey %>% 
  distinct(est_year, survey_area, stratum, tow, est_towdate, season, comname, catchsex, .keep_all = T) %>%
  filter(!season %in% c("Summer", "Winter") & est_year >= 1970) %>%
  group_by(est_year, survey_area, stratum, tow, est_towdate, season, 
           avgdepth, surftemp, bottemp, decdeg_beglat, decdeg_beglon, comname, abundance) %>% 
  summarise(biomass_kg = sum(biomass_kg, na.rm = T), .groups = "drop") 

# Weight by biomass
grouped_center_bio <- function(clean_survey, ...){
  clean_survey %>% 
    group_by(comname, ...) %>% 
    summarise(
      # Un-weighted averages
      total_biomass   = sum(biomass_kg),
      avg_biomass     = mean(biomass_kg),
      biomass_sd      = sd(biomass_kg),
      # All below are weighted by biomass
      avg_depth       = weightedMean(avgdepth, w = biomass_kg, na.rm = T),
      avg_bot_temp    = weightedMean(bottemp, w = biomass_kg, na.rm = T),
      avg_sur_temp    = weightedMean(surftemp, w = biomass_kg, na.rm = T),
      avg_lat         = weightedMean(decdeg_beglat, w = biomass_kg, na.rm = T),
      avg_lon         = weightedMean(decdeg_beglon, w = biomass_kg, na.rm = T),
      depth_sd        = weightedSd(avgdepth, w = biomass_kg, na.rm = T),
      temp_sd         = weightedSd(bottemp, w = biomass_kg, na.rm = T),
      lat_sd          = weightedSd(decdeg_beglat, w = biomass_kg, na.rm = T),
      lon_sd          = weightedSd(decdeg_beglon, w = biomass_kg, na.rm = T),
      .groups = "drop") 
}

weighted_data <- grouped_center_bio(clean_survey, est_year) %>%
  mutate(decade = 10*est_year %/% 10)
```

```{r}
#| label: spatial data 
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-height: 7
#| fig-width: 10 

library(sf)
library(rnaturalearthdata)
library(gganimate)

states <- st_as_sf(states50)

```
### Squid, mackerel, and butterfish

#### Category 1A-1C: Limited access - Longfin squid moratorium

```{r}
#| label: longfin squid
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| layout-ncol: 2
#| fig-width: 9
#| fig-height: 9

# centers %>% 
#   filter(license %in% c("SQUID_MACK_BUTTER_1", "SQUID_MACK_BUTTER_1A", "SQUID_MACK_BUTTER_1B", "SQUID_MACK_BUTTER_1C")) -> licenses
# 
# weighted_data %>% 
#   filter(comname == "longfin squid" & est_year >= min(licenses$AP_YEAR)) -> biomass
# 
# ### License map ###
# ggplot() +
#   geom_sf(data = states) +
#   geom_point(data = licenses, aes(x = long, y = lat, alpha = count), size = 8, color = "#00608a") +
#   scale_x_continuous(breaks = c(-64, -71, -78)) + scale_y_continuous(breaks = c(34, 40, 46)) +
#   coord_sf(xlim = c(-64,-78), ylim = c(34,46)) +
#   theme_gmri(axis.text = element_text(size = 20),
#              axis.title = element_text(size = 20),
#              plot.subtitle = element_text(size = 20),
#              plot.title = element_text(size = 25),
#              panel.grid.major = element_line(color = "#e9e9e9"),
#              panel.border = element_rect(color = "black", linetype = 1),
#              legend.position = "none") -> license_map
# license_map +
#   gganimate::transition_states(
#     AP_YEAR, # Uses each year (est_year in the data) as a state
#     transition_length = 1,
#     state_length = 5) +
#     gganimate::ease_aes('linear') +
#   labs(
#     y = "Latitude",
#     x = "Longitude",
#     title = "Commercial licenses",
#     subtitle = 'Year: {closest_state}') -> license_map_animated
# 
# ### Distribution map ###
# ggplot() +
#   geom_sf(data = states) +
#   geom_point(data = biomass, aes(x = avg_lon, y = avg_lat, alpha = avg_biomass), size = 8, color = "#ea4f12") +
#   scale_x_continuous(breaks = c(-64, -71, -78)) + scale_y_continuous(breaks = c(34, 40, 46)) +
#   coord_sf(xlim = c(-64,-78), ylim = c(34,46)) +
#   theme_gmri(axis.text = element_text(size = 20),
#              axis.title = element_text(size = 20),
#              plot.subtitle = element_text(size =20),
#              plot.title = element_text(size = 25),
#              panel.grid.major = element_line(color = "#e9e9e9"),
#              panel.border = element_rect(color = "black", linetype = 1),
#              legend.position = "none") -> dist
# dist +
#   gganimate::transition_states(
#     est_year, # Uses each year (est_year in the data) as a state
#     transition_length = 1,
#     state_length = 5) +
#   shadow_mark(alpha = 0.1, size = 12) +
#   gganimate::ease_aes('linear') +
#   labs(
#     y = "Latitude",
#     x = "Longitude",
#     title = "Annual center of biomass",
#     subtitle = 'Year: {closest_state}') -> dist_animated
# 
# ## Animate and save out 
# # license map 
# gganimate::animate(license_map_animated, fps = 20, width = 600, height = 600) -> license_map
# gganimate::anim_save(here(paste0(unique(biomass$comname), "_license.gif")), license_map)
# # dist map
# gganimate::animate(dist_animated, fps = 20, width = 600, height = 600) -> dist_map
# gganimate::anim_save(here(paste0(unique(biomass$comname), "_biomass.gif")), dist_map)
# 
# rm(list = c("dist_animated", "dist_map", "license_map_animated", "license_map"))

# If rendering, command out everything about this line before running. 

## Read back in as GIF 
knitr::include_graphics(here::here("longfin squid_license.gif"))
knitr::include_graphics(here::here("longfin squid_biomass.gif"))
```
#### Category 5: Limited access - Northern shortfin squid moratorium
```{r}
#| label: shortfin squid
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| layout-ncol: 2
#| fig-width: 9
#| fig-height: 9

# If rendering, command out everything about this line before running. 

## Read back in as GIF 
knitr::include_graphics(here::here("northern shortfin squid_license.gif"))
knitr::include_graphics(here::here("northern shortfin squid_biomass.gif"))
```


#### Category 4: Open access - Atlantic Mackerel
#### Category T1-T3: Limited access - Mackerel tiers 1-3

```{r}
#| label: mackerel
#| echo: false
#| message: false
#| warning: false
#| layout-ncol: 2
#| fig-width: 9
#| fig-height: 9

# centers %>% 
#   filter(license %in% c("SQUID_MACK_BUTTER_4", "SQUID_MACK_BUTTER_T1", "SQUID_MACK_BUTTER_T2", "SQUID_MACK_BUTTER_T3")) -> licenses
# 
# weighted_data %>% 
#   filter(comname == "atlantic mackerel" & est_year >= min(licenses$AP_YEAR)) -> biomass # chub mackerel too? 
# 
# ### License map ###
# ggplot() +
#   geom_sf(data = states) +
#   geom_point(data = licenses, aes(x = long, y = lat, alpha = count), size = 8, color = "#00608a") +
#   scale_x_continuous(breaks = c(-64, -71, -78)) + scale_y_continuous(breaks = c(34, 40, 46)) +
#   coord_sf(xlim = c(-64,-78), ylim = c(34,46)) +
#   theme_gmri(axis.text = element_text(size = 20),
#              axis.title = element_text(size = 20),
#              plot.subtitle = element_text(size = 20),
#              plot.title = element_text(size = 25),
#              panel.grid.major = element_line(color = "#e9e9e9"),
#              panel.border = element_rect(color = "black", linetype = 1),
#              legend.position = "none") -> license_map
# license_map +
#   gganimate::transition_states(
#     AP_YEAR, # Uses each year (est_year in the data) as a state
#     transition_length = 1,
#     state_length = 5) +
#     gganimate::ease_aes('linear') +
#   labs(
#     y = "Latitude",
#     x = "Longitude",
#     title = "Commercial licenses",
#     subtitle = 'Year: {closest_state}') -> license_map_animated
# 
# ### Distribution map ###
# ggplot() +
#   geom_sf(data = states) +
#   geom_point(data = biomass, aes(x = avg_lon, y = avg_lat, alpha = avg_biomass), size = 8, color = "#ea4f12") +
#   scale_x_continuous(breaks = c(-64, -71, -78)) + scale_y_continuous(breaks = c(34, 40, 46)) +
#   coord_sf(xlim = c(-64,-78), ylim = c(34,46)) +
#   theme_gmri(axis.text = element_text(size = 20),
#              axis.title = element_text(size = 20),
#              plot.subtitle = element_text(size =20),
#              plot.title = element_text(size = 25),
#              panel.grid.major = element_line(color = "#e9e9e9"),
#              panel.border = element_rect(color = "black", linetype = 1),
#              legend.position = "none") -> dist
# dist +
#   gganimate::transition_states(
#     est_year, # Uses each year (est_year in the data) as a state
#     transition_length = 1,
#     state_length = 5) +
#   shadow_mark(alpha = 0.1, size = 12) +
#   gganimate::ease_aes('linear') +
#   labs(
#     y = "Latitude",
#     x = "Longitude",
#     title = "Annual center of biomass",
#     subtitle = 'Year: {closest_state}') -> dist_animated
# 
# ## Animate and save out 
# # license map 
# gganimate::animate(license_map_animated, fps = 20, width = 600, height = 600) -> license_map
# gganimate::anim_save(here(paste0(unique(biomass$comname), "_license.gif")), license_map)
# # dist map
# gganimate::animate(dist_animated, fps = 20, width = 600, height = 600) -> dist_map
# gganimate::anim_save(here(paste0(unique(biomass$comname), "_biomass.gif")), dist_map)
# 
# rm(list = c("dist_animated", "dist_map", "license_map_animated", "license_map"))
# 
# # If rendering command out everything above this line

## Read back in as GIF 
knitr::include_graphics(here::here("atlantic mackerel_license.gif"))
knitr::include_graphics(here::here("atlantic mackerel_biomass.gif"))
```

#### Category 6: Limited access - Butterfish moratorium

```{r}
#| label: butterfish
#| echo: false
#| message: false
#| warning: false
#| layout-ncol: 2
#| fig-width: 9
#| fig-height: 9

# centers %>% 
#   filter(license == "SQUID_MACK_BUTTER_6") -> licenses
# 
# weighted_data %>% 
#   filter(comname == "butterfish" & est_year >= min(licenses$AP_YEAR)) -> biomass
# 
# ### License map ###
# ggplot() +
#   geom_sf(data = states) +
#   geom_point(data = licenses, aes(x = long, y = lat, alpha = count), size = 8, color = "#00608a") +
#   scale_x_continuous(breaks = c(-64, -71, -78)) + scale_y_continuous(breaks = c(34, 40, 46)) +
#   coord_sf(xlim = c(-64,-78), ylim = c(34,46)) +
#   theme_gmri(axis.text = element_text(size = 20),
#              axis.title = element_text(size = 20),
#              plot.subtitle = element_text(size = 20),
#              plot.title = element_text(size = 25),
#              panel.grid.major = element_line(color = "#e9e9e9"),
#              panel.border = element_rect(color = "black", linetype = 1),
#              legend.position = "none") -> license_map
# license_map +
#   gganimate::transition_states(
#     AP_YEAR, # Uses each year (est_year in the data) as a state
#     transition_length = 1,
#     state_length = 5) +
#     gganimate::ease_aes('linear') +
#   labs(
#     y = "Latitude",
#     x = "Longitude",
#     title = "Commercial licenses",
#     subtitle = 'Year: {closest_state}') -> license_map_animated
# 
# ### Distribution map ###
# ggplot() +
#   geom_sf(data = states) +
#   geom_point(data = biomass, aes(x = avg_lon, y = avg_lat, alpha = avg_biomass), size = 8, color = "#ea4f12") +
#   scale_x_continuous(breaks = c(-64, -71, -78)) + scale_y_continuous(breaks = c(34, 40, 46)) +
#   coord_sf(xlim = c(-64,-78), ylim = c(34,46)) +
#   theme_gmri(axis.text = element_text(size = 20),
#              axis.title = element_text(size = 20),
#              plot.subtitle = element_text(size =20),
#              plot.title = element_text(size = 25),
#              panel.grid.major = element_line(color = "#e9e9e9"),
#              panel.border = element_rect(color = "black", linetype = 1),
#              legend.position = "none") -> dist
# dist +
#   gganimate::transition_states(
#     est_year, # Uses each year (est_year in the data) as a state
#     transition_length = 1,
#     state_length = 5) +
#   shadow_mark(alpha = 0.1, size = 12) +
#   gganimate::ease_aes('linear') +
#   labs(
#     y = "Latitude",
#     x = "Longitude",
#     title = "Annual center of biomass",
#     subtitle = 'Year: {closest_state}') -> dist_animated
# 
# ## Animate and save out 
# # license map 
# gganimate::animate(license_map_animated, fps = 20, width = 600, height = 600) -> license_map
# gganimate::anim_save(here(paste0(unique(biomass$comname), "_license.gif")), license_map)
# # dist map
# gganimate::animate(dist_animated, fps = 20, width = 600, height = 600) -> dist_map
# gganimate::anim_save(here(paste0(unique(biomass$comname), "_biomass.gif")), dist_map)
# 
# rm(list = c("dist_animated", "dist_map", "license_map_animated", "license_map"))

# If rendering command out everything above this line

## Read back in as GIF 
knitr::include_graphics(here::here("butterfish_license.gif"))
knitr::include_graphics(here::here("butterfish_biomass.gif"))
```

### Black sea bass
#### Category 1 - Limited access commercial catch

```{r}
#| label: black sea bass 
#| echo: false
#| message: false
#| warning: false
#| layout-ncol: 2
#| fig-width: 9
#| fig-height: 9


# centers %>%
#   filter(license == "BLACK_SEA_BASS_1") -> licenses 
# 
# weighted_data %>% 
#   filter(comname == "black sea bass" & est_year >= min(licenses$AP_YEAR)) -> biomass
# 
# ### License map ###
# ggplot() +
#   geom_sf(data = states) +
#   geom_point(data = licenses, aes(x = long, y = lat, alpha = count), size = 8, color = "#00608a") +
#   scale_x_continuous(breaks = c(-64, -71, -78)) + scale_y_continuous(breaks = c(34, 40, 46)) +
#   coord_sf(xlim = c(-64,-78), ylim = c(34,46)) +
#   theme_gmri(axis.text = element_text(size = 20),
#              axis.title = element_text(size = 20),
#              plot.subtitle = element_text(size = 20),
#              plot.title = element_text(size = 25),
#              panel.grid.major = element_line(color = "#e9e9e9"),
#              panel.border = element_rect(color = "black", linetype = 1),
#              legend.position = "none") -> license_map
# license_map +
#   gganimate::transition_states(
#     AP_YEAR, # Uses each year (est_year in the data) as a state
#     transition_length = 1,
#     state_length = 5) +
#     gganimate::ease_aes('linear') +
#   labs(
#     y = "Latitude",
#     x = "Longitude",
#     title = "Commercial licenses",
#     subtitle = 'Year: {closest_state}') -> license_map_animated
# 
# ### Distribution map ###
# ggplot() +
#   geom_sf(data = states) +
#   geom_point(data = biomass, aes(x = avg_lon, y = avg_lat, alpha = avg_biomass), size = 8, color = "#ea4f12") +
#   scale_x_continuous(breaks = c(-64, -71, -78)) + scale_y_continuous(breaks = c(34, 40, 46)) +
#   coord_sf(xlim = c(-64,-78), ylim = c(34,46)) +
#   theme_gmri(axis.text = element_text(size = 20),
#              axis.title = element_text(size = 20),
#              plot.subtitle = element_text(size =20),
#              plot.title = element_text(size = 25),
#              panel.grid.major = element_line(color = "#e9e9e9"),
#              panel.border = element_rect(color = "black", linetype = 1),
#              legend.position = "none") -> dist
# dist +
#   gganimate::transition_states(
#     est_year, # Uses each year (est_year in the data) as a state
#     transition_length = 1,
#     state_length = 5) +
#   shadow_mark(alpha = 0.1, size = 12) +
#   gganimate::ease_aes('linear') +
#   labs(
#     y = "Latitude",
#     x = "Longitude",
#     title = "Annual center of biomass",
#     subtitle = 'Year: {closest_state}') -> dist_animated
# 
# ## Animate and save out 
# # license map 
# gganimate::animate(license_map_animated, fps = 20, width = 600, height = 600) -> license_map
# gganimate::anim_save(here(paste0(unique(biomass$comname), "_license.gif")), license_map)
# # dist map
# gganimate::animate(dist_animated, fps = 20, width = 600, height = 600) -> dist_map
# gganimate::anim_save(here(paste0(unique(biomass$comname), "_biomass.gif")), dist_map)
# 
# rm(list = c("dist_animated", "dist_map", "license_map_animated", "license_map"))

# If rendering command out everything above this line

## Read back in as GIF 
knitr::include_graphics(here::here("black sea bass_license.gif"))
knitr::include_graphics(here::here("black sea bass_biomass.gif"))
```

```{r}
#| label: garfo lats
#| echo: false
#| message: false

# garfo_geo %>%
#   ungroup() %>%
#   pivot_longer(cols = BLACK_SEA_BASS_1:TILEFISH_D, names_to = "license", values_to = "count") %>%
#   filter(!count == 0) %>%
#   left_join(license_list) %>%
#   group_by(VP_NUM, category) %>%
#   mutate(lat = round(lat, digits = 1),
#          long = round(long, digits = 1)) %>%
#   filter(lat %in% seq(30,48)) %>% 
#   group_by(AP_YEAR, lat, category) %>% 
#   summarise(count = sum(count)) -> garfo_lats
# 
# garfo_lats %>% 
#   group_by(category) %>%
#   nest() %>% 
#   mutate(plot = map2(data, category, function(x,y){
#     ggplot(data = x)+
#       geom_point(aes(x = AP_YEAR, y = lat, size = count, alpha = count), color = "#00608A") +
#       ggtitle(category) + xlab("Year") + ylab("Latitude") +
#       ylim(c(30,45)) +
#       theme_gmri() 
#   })) -> garfo_lats
# 
# gridExtra::marrangeGrob(garfo_lats$plot, layout_matrix = matrix(1:1, ncol = 1, nrow = 1, byrow = TRUE), top = NULL)

```
